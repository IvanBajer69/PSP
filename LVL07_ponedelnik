#include <iostream>
#include <string.h>
using namespace std;
class Student
{
private:
    int id;
    string kurs;
    int plateno;

public:
    Student(int ID = 0, string krs = "", int plat = 0)
    {
        kurs = krs;
        id = ID;
        if (plateno > 0)
        {
            plateno = plat;
        }
        else
        {
            plateno = 0;
        }
    }

    int getplateno()
    {
        return plateno;
    }
    int getID()
    {
        return id;
    }
    void pechati()
    {
        cout << "Studentot so ID:" << id << endl;
    }
};

class Kurs
{
private:
    string imeKurs;
    int brStudneti;
    Student studenti[20];
    int participacija;

public:
    Kurs(string iK = "", int brs = 0, Student *niza = NULL, int parti = 0)
    {
        imeKurs = iK;
        if (brs > 0)
        {
            brStudneti = brs;
        }
        else
        {
            brStudneti = 0;
        }
        if (parti >= 0 && parti <= 500)
        {
            participacija = parti;
        }
        else
        {
            participacija = 0;
        }
    }

    void pecati()
    {
        cout << "Imeto na kursot e: " << imeKurs << endl;
        cout << "Osnovna Participacija e: " << participacija << endl;
        cout << "Zapisani se : " << brStudneti << " i toa: " << endl;
        for (int i = 0; i < brStudneti; i++)
        {
            studenti[i].pechati();
        }
    }
    int doplakja(int redenbr)
    {
        return participacija - studenti[redenbr - 1].getplateno();
    }
};
int main()
{
    string imeCourse;
    int brS;
    int osnovnaParti;
    cout << "Vnesete go imeto na kursot, brojot na studenti zapisani, i osnovnata participacija" << endl;
    cin >> imeCourse >> brS >> osnovnaParti;
    Student list[10];
    for (int i = 0; i < brS; i++)
    {
        int indentifik, plat;
        cout << "Vnesete ID i platena suma" << endl;
        cin >> indentifik;
        cin >> plat;
        list[i] = Student(indentifik, imeCourse, plat);
    }
    osnovnaParti = osnovnaParti - (osnovnaParti / 100) * brS;
    Kurs k(imeCourse, brS, list, osnovnaParti);
    k.pecati();
    cout << "Novata participacija na kursot iznesuva " << osnovnaParti << endl;
    int reden;
    cout << "Vnesete za koj reden broj na student ve interesira dolgot " << endl;
    cin >> reden;
    cout << "studentot so reden broj " << reden << " dolzi uste " << k.doplakja(reden) << endl;
}
